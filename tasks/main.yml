---

#
# Assumes keys and certs live under /etc/pki/tls/{private/certs}
#

- stat: path={{ private_key_file }}
  register: does_private_key_exist

- stat: path={{ public_cert_file }}
  register: does_public_cert_exist

- stat: path={{ forward_bundle_certs }}
  register: does_forward_bundle_certs_exist

- stat: path={{ reverse_bundle_certs }}
  register: does_reverse_bundle_certs_exist

- stat: path={{ reverse_bundle_certs }}
  register: does_reverse_bundle_certs_exist

- name: check if keytool installed
  shell: command -v {{ java_home }}/bin/keytool >/dev/null 2>&1
  register: is_keytool_exist
  ignore_errors: yes

- name: stop if the TLS key hasn't been cut for this machine
  fail: msg="Cannot find the private key for this machine {{ private_key_file }} "
  when: not does_private_key_exist.stat.exists

- name: stop if the TLS cert hasn't been cut for this machine
  fail: msg="Cannot find the public cert for this machine {{ public_cert_file }}"
  when: not does_public_cert_exist.stat.exists

- name: stop if no bundle certs exist
  fail: msg="Cannot find the forward bundle certs for this machine {{ forward_bundle_certs }}"
  when: not does_forward_bundle_certs_exist.stat.exists

- name: stop if no bundle certs exist
  fail: msg="Cannot find the reverse bundle certs for this machine {{ reverse_bundle_certs }} "
  when: (include_bundle_certs is defined and include_bundle_certs) and not does_reverse_bundle_certs_exist.stat.exists

- include: create_chains.yml
  when: prepare_bundle_certs is defined and prepare_bundle_certs

- name: create p12 keystore file
  command: openssl pkcs12 -export -chain -in "{{ public_cert_file }}" -inkey "{{ private_key_file }}" -out "{{ tls_path }}/misc/{{ inventory_hostname }}.p12" -CAfile "{{ forward_bundle_certs }}" -name {{ inventory_hostname }} -passout pass:{{ keystore_password }}

- include: create_jks.yml
  when: is_keytool_exist.rc == 0

- include: wallet.yml
  when: is_keytool_exist.rc == 0

